# Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# https://docs.amplify.aws/cli/graphql/data-modeling/#has-one-relationship

type User
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "id" }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  nickname: String!
  email: String!
  school: String!
  major: String!
  posts: [Post] @hasMany(indexName: "postByUser", fields: ["id"])
  comments: [Comment] @hasMany(indexName: "commentByUser", fields: ["id"])
  bookmarks: [Bookmark] @hasMany(indexName: "bookmarkByUser", fields: ["id"])
  points: Int!
}

type Post
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin"] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  userID: ID!
    @index(
      name: "postByUser"
      queryField: "getUserPost"
      sortKeyFields: ["createdAt"]
    )
  userNickname: String!
  title: String!
  topic: String!
  content: String!
  views: Int!
  bookmarks: Int!
  comments: [Comment] @hasMany(indexName: "commentByPost", fields: ["id"])
  createdAt: AWSDateTime!
  type: String
    @index(
      name: "postByDate"
      queryField: "getLatestPost"
      sortKeyFields: ["createdAt"]
    )
}

type Comment
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin"] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  userID: ID!
    @index(
      name: "commentByUser"
      queryField: "getUserComment"
      sortKeyFields: ["createdAt"]
    )
  postID: ID!
    @index(
      name: "commentByPost"
      queryField: "getPostComment"
      sortKeyFields: ["createdAt"]
    )
  likes: Int!
  content: String!
  userNickname: String!
  post: Post @belongsTo(fields: ["postID"])
  replies: [Reply] @hasMany(indexName: "replyByComment", fields: ["id"])
  createdAt: AWSDateTime!
}

type Reply
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin"] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  userID: ID!
  commentID: ID!
    @index(
      name: "replyByComment"
      queryField: "getCommentReply"
      sortKeyFields: ["createdAt"]
    )
  content: String!
  userNickname: String!
  comment: Comment @belongsTo(fields: ["commentID"])
  createdAt: AWSDateTime!
}

type Bookmark @model @auth(rules: [{ allow: owner }]) {
  userID: ID!
    @index(
      name: "bookmarkByUser"
      queryField: "getUserBookmark"
      sortKeyFields: ["createdAt"]
    )
  postID: ID!
  post: Post @hasOne(fields: ["postID"])
  createdAt: AWSDateTime!
}

# https://docs.amplify.aws/lib/graphqlapi/subscribe-data/q/platform/js/
# https://docs.amplify.aws/guides/api-graphql/subscriptions-by-id/q/platform/js/

type Subscription {
  onCommentByPostId(postID: ID!): Comment
    @aws_subscribe(mutations: ["createComment"])
  onReplyByCommentId(commentID: ID!): Reply
    @aws_subscribe(mutations: ["createReply"])
}
